services:
  # Nginx - Load balancer
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/app/static  
    depends_on:
      - django-1
      - django-2
      - django-3
    networks:
      - app-network

  django-1: &django-config
    container_name: django-1
    build:
      context: ./main/
      dockerfile: Dockerfile
    restart: always
    environment:
      - GUNICORN_PORT=8000
      - DJANGO_SETTINGS_MODULE=config.settings
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/miniproject
    env_file:
      - .env
    volumes:  
      - ./static:/app/static  
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    ports:
      - "8000:8000"

  django-2:
    <<: *django-config
    container_name: django-2
    ports:
      - "8001:8001"
    environment:
      - GUNICORN_PORT=8001

  django-3:
    <<: *django-config
    container_name: django-3
    ports:
      - "8002:8002"
    environment:
      - GUNICORN_PORT=8002

  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  postgres:
    container_name: postgres
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: miniproject
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

    # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    networks:
      - app-network
  
  # Grafana - Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-polystat-panel
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - TZ=Asia/Almaty

volumes:
  postgres-data:
  static:
  grafana-data:

networks:
  app-network:
    driver: bridge